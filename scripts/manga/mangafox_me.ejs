<%
saver.bindPageHandler('http://mangafox.me/manga/', function($, page, options, callback) {
  if ($('#viewer').length) {

    var link_obj = urlutil.parse(page.url);
    var chapter_url = page.url;
    if (page.url.indexOf('.html') > 0) {
      chapter_url = page.url.replace(path.basename(link_obj.pathname),'');
    }
    // console.log('Page URL: ' + page.url);
    // console.log('Manga chapter page: ' + chapter_url);

    var links = [];
    // if ($('#top_center_bar .r.m .prev_page').length) {
    //   var prev_page = $('#top_center_bar .r.m .prev_page').attr('href');
    //   // console.log('prev_page=' + prev_page);
    //   if (prev_page.indexOf(chapter_url) >= 0) {
    //     // previous page in same chapter
    //     links.push(prev_page);  
    //   }
    // }
    // if ($('#top_center_bar .r.m .next_page').length) {
    //   var next_page = $('#top_center_bar .r.m .next_page').attr('href');
    //   // console.log('next_page=' + next_page);
    //   if (next_page.indexOf(chapter_url) >= 0) {
    //     // next page in same chapter
    //     links.push(next_page); 
    //   }
    // }

    links.push(page.url);
    
    $('.r.m .l select').first().children().each(function() {
      var title = $(this).text();
      if (title.toLowerCase() != 'comments') {
        links.push(chapter_url + $(this).attr('value') + '.html');
      }
    });

    // console.log(links);
    // if (links.length == 0) {
    //   console.log('No prev_page or next_page link found');
    //   return callback();
    // }

    if (typeof options.chapter_pages == 'undefined') {
      // It's is a page of a manga chapter
      // Init data holder for chapter pages in options (passed through all callback)
      options.chapter_pages = {};
    }

    for (var i = 0; i < links.length; i++) {
      var chapter_page_link = links[i];
      if (typeof options.chapter_pages[chapter_page_link] == 'undefined') {
        // console.log('Add chapter page link: ' + chapter_page_link);
        options.chapter_pages[chapter_page_link] = {
          visited: false,
          images: []
        };
      }
    }

    // console.log(options.chapter_pages);

    if (typeof options.chapter_pages != 'undefined' 
      && typeof options.chapter_pages[page.url] != 'undefined') {
      options.chapter_pages[page.url].visited = true;
    } else {
      console.log('Wrong state! This page not included in chapter links');
      return callback();
    }

    // Get images on current page
    var images = saver.getImages($, page, '#viewer');
    if (options.verbose) console.log(images);

    // Save to options
    options.chapter_pages[page.url].images = options.chapter_pages[page.url].images.concat(images);
    // console.log(options.chapter_pages);

    // Check if all chapter pages are visited
    var all_chapter_pages_visited = true;
    for (var prop in options.chapter_pages) {
      if (options.chapter_pages[prop].visited == false) {
        all_chapter_pages_visited = false;
        break;
      }
    }

    if (all_chapter_pages_visited) {
      console.log('All chapter pages were visited. It\'s time to download');

      // It's time to download images
      var chapter_images = [];
      for (var prop in options.chapter_pages) {
        var chapter_page = options.chapter_pages[prop];
        chapter_images = chapter_images.concat(chapter_page.images);
      }
      // if (options.verbose) console.log(chapter_images);

      // Reset chapter_pages
      options.chapter_pages = {};

      // var link_obj = urlutil.parse(page.url);
      // var output_dir_name = path.basename(path.dirname(link_obj.pathname));
      // var output_dir = (options.output_dir || '.') + '/' + output_dir_name;
      
      // console.log('Options output dir : ' + options.output_dir);
      // console.log('Page output dir    : ' + page.output_dir);
      // console.log('Output dir         : ' + output_dir);

      var chapter_url_obj = urlutil.parse(chapter_url);
      var output_dir_name = path.basename(chapter_url_obj.pathname);
      var output_dir = (options.output_dir || '.') + '/' + output_dir_name;      

      // var output_dir = page.output_dir;

      var chapter_title = $('#series h1.no').text().trim();

      // Save current state
      var state_data = {
        output_dir: path.basename(output_dir),
        chapter_title: chapter_title,
        chapter_images: chapter_images,
        done: false
      };
      saver.setStateData(chapter_url, state_data);

      // Download chapter_images here
      saver.downloadImages(chapter_images, {
        output_dir: output_dir,
        skip_if_exist: true
      }, function(err, images) {
        if (err) {
          console.log(err);
          return callback(err);
        }

        saver.updateStateData(chapter_url, {
          chapter_images: images, 
          done: true, 
          last_update: new Date() 
        }, true);

        callback();
        // saver.renderTemplate('mangaviewer.ejs', {
        //   chapter_title: chapter_title,
        //   chapter_images: images
        // }, function(err, result) {
        //   if (!err) {
        //     saver.saveHtmlSync(output_dir + '/reader.html', result.html);
        //   }
        //   // exit here
        //   callback();
        // });
      });
    } else {

      // Get next unprocessed page in options.chapter_pages
      var next_page = '';
      for (var prop in options.chapter_pages) {
        if (options.chapter_pages[prop].visited == false) {
          next_page = prop;
          break;
        }
      }

      // Process next page
      saver.processPage(next_page, options, function(err) {
        if (err) {
          return callback(err);
        }
        callback();
      });
    }
  } else if ($('#chapters').length) {
    var chapter_links = saver.getLinks($, page, '#chapters', { filters: ['http://mangafox.me/manga/'] });
    for (var i = 0; i < chapter_links.length; i++) {
      var chapter_link = chapter_links[i];
      if (chapter_link.indexOf('.html') > 0) {
        var chapter_link_obj = urlutil.parse(chapter_link);
        chapter_links[i] = chapter_link.replace(path.basename(chapter_link_obj.pathname),'');
      }
    }
    if (options.verbose) console.log(chapter_links);

    saver.processPages(chapter_links, options, function(err) {
      if (err) return callback(err);
      callback();
    });
  } else {
    callback();
  }
});
%>